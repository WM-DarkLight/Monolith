@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --gold: #d4af37;
  --gold-light: #e9c767;
  --gold-dark: #a38829;
  --white: #ffffff;
  --black: #000000;
  --dark-gray: #1a1a1a;
  --darker-gray: #0f0f0f;
  --light-gray: #2a2a2a;
  --accent-blue: #3a7bd5;
  --accent-purple: #9d50bb;
  --rust: #8b3103;
  --rust-light: #a04215;
  --transition-standard: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-fast: 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

body {
  background-color: var(--black);
  color: var(--white);
  min-height: 100vh;
  margin: 0;
  padding: 0;
  font-family: "Courier New", monospace;
  overflow-x: hidden;
}

/* Post-Apocalyptic UI Elements */
.wasteland-container {
  background-color: var(--darker-gray);
  border: 2px solid var(--gold-dark);
  border-radius: 0.25rem;
  box-shadow: 0 0 15px rgba(212, 175, 55, 0.15), inset 0 0 5px rgba(0, 0, 0, 0.5);
  position: relative;
  overflow: hidden;
  transition: transform var(--transition-standard), box-shadow var(--transition-standard);
}

.wasteland-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23d4af37' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: 0;
}

.wasteland-card {
  background-color: var(--dark-gray);
  border: 1px solid var(--gold-dark);
  border-radius: 0.25rem;
  transition: all var(--transition-standard);
  position: relative;
  overflow: hidden;
  transform-origin: center center;
  will-change: transform, opacity, box-shadow;
}

.wasteland-card::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--gold), transparent);
}

.wasteland-card:hover {
  border-color: var(--gold);
  transform: translateY(-2px) scale(1.01);
  box-shadow: 0 5px 15px rgba(212, 175, 55, 0.2);
}

.wasteland-card:active {
  transform: translateY(-1px) scale(0.99);
  transition: all var(--transition-fast);
}

.wasteland-button {
  background-color: var(--dark-gray);
  color: var(--gold);
  border: 1px solid var(--gold);
  padding: 0.5rem 1rem;
  font-family: "Courier New", monospace;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  transition: all var(--transition-standard);
  transform-origin: center;
  will-change: transform, background-color, color;
}

.wasteland-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(212, 175, 55, 0.2), transparent);
  transition: all 0.5s ease;
}

.wasteland-button:hover {
  background-color: var(--gold);
  color: var(--black);
  transform: translateY(-1px);
}

.wasteland-button:hover::before {
  left: 100%;
}

.wasteland-button:active {
  transform: translateY(1px) scale(0.98);
  transition: all var(--transition-fast);
}

.wasteland-input {
  background-color: var(--darker-gray);
  border: 1px solid var(--gold-dark);
  color: var(--white);
  padding: 0.5rem;
  font-family: "Courier New", monospace;
  width: 100%;
  transition: border-color var(--transition-standard), box-shadow var(--transition-standard);
}

.wasteland-input:focus {
  outline: none;
  border-color: var(--gold);
  box-shadow: 0 0 0 1px var(--gold);
}

/* Fix for select appearance */
select.wasteland-input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: none;
}

/* Dashboard Layout */
.dashboard-grid {
  display: grid;
  grid-template-columns: 240px 1fr;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    "header header"
    "sidebar main";
  height: 100vh;
  width: 100vw;
  position: relative;
  overflow: hidden;
}

.dashboard-header {
  grid-area: header;
  z-index: 10;
}

.dashboard-sidebar {
  grid-area: sidebar;
  z-index: 5;
  overflow-y: auto;
  overflow-x: hidden;
}

.dashboard-main {
  grid-area: main;
  overflow-y: auto;
  position: relative;
  z-index: 1;
}

/* Post-Apocalyptic Background */
.wasteland-background {
  background-color: var(--black);
  position: relative;
  overflow: hidden;
}

.wasteland-background::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(circle at 20% 30%, rgba(139, 49, 3, 0.2) 0%, transparent 30%),
    radial-gradient(circle at 80% 70%, rgba(212, 175, 55, 0.1) 0%, transparent 30%);
  z-index: 0;
  animation: subtle-pulse 15s infinite alternate;
}

@keyframes subtle-pulse {
  0% {
    opacity: 0.7;
    background-position: 0% 0%;
  }
  100% {
    opacity: 1;
    background-position: 5% 5%;
  }
}

/* Decorative Elements */
.terminal-text {
  font-family: "Courier New", monospace;
  color: var(--gold);
  text-shadow: 0 0 5px rgba(212, 175, 55, 0.5);
}

.terminal-header {
  font-family: "Courier New", monospace;
  font-weight: bold;
  color: var(--gold);
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: 0 0 5px rgba(212, 175, 55, 0.5);
  position: relative;
  display: inline-block;
  transition: text-shadow var(--transition-standard);
}

.terminal-header::before,
.terminal-header::after {
  content: "";
  position: absolute;
  top: 50%;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--gold), transparent);
  width: 30px;
  transition: width var(--transition-standard), opacity var(--transition-standard);
}

.terminal-header::before {
  right: 100%;
  margin-right: 10px;
}

.terminal-header::after {
  left: 100%;
  margin-left: 10px;
}

.terminal-header:hover::before,
.terminal-header:hover::after {
  width: 50px;
  opacity: 0.8;
}

/* Add this to your existing CSS file */
@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.terminal-header.group:hover .chevron-left {
  animation: fadeInLeft 0.3s ease-out forwards;
}

.terminal-header.group {
  position: relative;
  transition: all var(--transition-standard);
}

.terminal-header.group:hover {
  text-shadow: 0 0 10px rgba(212, 175, 55, 0.8);
  transform: translateX(2px);
}

.terminal-header.group::after {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 1px;
  background-color: var(--gold);
  transition: width var(--transition-standard);
}

.terminal-header.group:hover::after {
  width: 100%;
}

.distressed-border {
  position: relative;
}

.distressed-border::before {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 1px solid var(--gold-dark);
  border-radius: inherit;
  pointer-events: none;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='%23d4af37' fill-opacity='0.05' fill-rule='evenodd'/%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: -1;
}

.progress-bar {
  height: 8px;
  width: 100%;
  background-color: var(--darker-gray);
  border: 1px solid var(--gold-dark);
  border-radius: 4px;
  overflow: hidden;
  position: relative;
}

.progress-bar::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 5px,
    rgba(0, 0, 0, 0.1) 5px,
    rgba(0, 0, 0, 0.1) 10px
  );
}

.progress-bar-fill {
  height: 100%;
  transition: width 1s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.progress-bar-fill::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transform: translateX(-100%);
  animation: progress-shine 2s infinite;
}

@keyframes progress-shine {
  100% {
    transform: translateX(100%);
  }
}

.progress-bar-health {
  background: linear-gradient(90deg, var(--rust), var(--rust-light));
}

.progress-bar-energy {
  background: linear-gradient(90deg, var(--gold-dark), var(--gold));
}

/* Scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--darker-gray);
  border-left: 1px solid var(--gold-dark);
}

::-webkit-scrollbar-thumb {
  background: var(--gold-dark);
  border-radius: 0;
  transition: background var(--transition-standard);
}

::-webkit-scrollbar-thumb:hover {
  background: var(--gold);
}

/* Legacy classes for compatibility */
.monolith-option {
  @apply wasteland-button;
}

.monolith-title {
  @apply terminal-header text-3xl font-bold mb-4;
}

.monolith-subtitle {
  @apply terminal-header text-xl font-semibold mb-2;
}

.monolith-text {
  @apply text-white mb-4;
}

.monolith-container {
  @apply wasteland-container p-4;
}

/* Animation */
@keyframes terminal-blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

.terminal-cursor {
  display: inline-block;
  width: 8px;
  height: 16px;
  background-color: var(--gold);
  animation: terminal-blink 1s step-end infinite;
  vertical-align: middle;
  margin-left: 2px;
}

.scan-line {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: rgba(212, 175, 55, 0.2);
  z-index: 999;
  animation: scan 6s linear infinite;
  pointer-events: none;
}

@keyframes scan {
  0% {
    top: 0;
  }
  100% {
    top: 100vh;
  }
}

/* Add animation for modal */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.2s ease-out forwards;
}

/* Add a pulsing effect for the save button when needed */
@keyframes pulse-save {
  0%,
  100% {
    box-shadow: 0 0 0 0 rgba(212, 175, 55, 0.7);
  }
  50% {
    box-shadow: 0 0 0 5px rgba(212, 175, 55, 0);
  }
}

.pulse-save {
  animation: pulse-save 2s infinite;
}

/* Utility classes */
.text-gold {
  color: var(--gold);
}

.text-rust {
  color: var(--rust);
}

.border-gold {
  border-color: var(--gold);
}

.bg-dark-gray {
  background-color: var(--dark-gray);
}

.bg-darker-gray {
  background-color: var(--darker-gray);
}

/* Add these styles at the end of the file to ensure buttons are clickable */

/* Fix for button click issues */
button {
  cursor: pointer;
  position: relative;
  z-index: 1;
}

button:focus {
  outline: 1px solid var(--gold);
}

/* Ensure header buttons are clickable */
.dashboard-header button,
.flex.items-center.gap-2 button {
  z-index: 10;
  position: relative;
}

/* Tab content transitions */
.tab-content {
  transition: opacity var(--transition-standard), transform var(--transition-standard);
  will-change: opacity, transform;
}

.tab-enter {
  opacity: 0;
  transform: translateY(10px);
}

.tab-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity var(--transition-standard), transform var(--transition-standard);
}

.tab-exit {
  opacity: 1;
  transform: translateY(0);
}

.tab-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity var(--transition-standard), transform var(--transition-standard);
}

/* Card grid animations */
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
}

.card-enter {
  opacity: 0;
  transform: scale(0.9) translateY(20px);
}

.card-enter-active {
  opacity: 1;
  transform: scale(1) translateY(0);
  transition: opacity var(--transition-standard), transform var(--transition-standard);
}

.card-exit {
  opacity: 1;
  transform: scale(1);
}

.card-exit-active {
  opacity: 0;
  transform: scale(0.9);
  transition: opacity var(--transition-standard), transform var(--transition-standard);
}

/* Staggered animation for cards */
.staggered-card {
  opacity: 0;
  transform: translateY(20px);
  animation: staggered-fade-in 0.5s forwards;
}

@keyframes staggered-fade-in {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Loading animation */
.loading-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
}

.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(212, 175, 55, 0.3);
  border-radius: 50%;
  border-top-color: var(--gold);
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Glow effect for interactive elements */
.glow-on-hover {
  transition: box-shadow var(--transition-standard), transform var(--transition-standard);
}

.glow-on-hover:hover {
  box-shadow: 0 0 10px rgba(212, 175, 55, 0.5);
  transform: translateY(-2px);
}

/* Folder animations */
.folder-content {
  overflow: hidden;
  transition: max-height var(--transition-standard), opacity var(--transition-standard);
}

.folder-collapsed {
  max-height: 0;
  opacity: 0;
}

.folder-expanded {
  max-height: 1000px;
  opacity: 1;
}

/* Shimmer effect for cards while loading */
.shimmer {
  position: relative;
  overflow: hidden;
}

.shimmer::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background-image: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0,
    rgba(255, 255, 255, 0.1) 20%,
    rgba(255, 255, 255, 0.2) 60%,
    rgba(255, 255, 255, 0)
  );
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}

/* Dashboard tab transitions */
.dashboard-tab-content {
  position: relative;
  min-height: 300px;
}

.dashboard-tab-container {
  position: absolute;
  width: 100%;
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.tab-active {
  opacity: 1;
  transform: translateX(0);
  z-index: 2;
}

.tab-inactive-left {
  opacity: 0;
  transform: translateX(-20px);
  z-index: 1;
}

.tab-inactive-right {
  opacity: 0;
  transform: translateX(20px);
  z-index: 1;
}

/* Card hover effects */
.card-hover-effect {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card-hover-effect:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

/* Staggered animation for grid items */
.grid-item {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.5s forwards;
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply staggered delay to grid items */
.grid-item:nth-child(1) {
  animation-delay: 0.1s;
}
.grid-item:nth-child(2) {
  animation-delay: 0.15s;
}
.grid-item:nth-child(3) {
  animation-delay: 0.2s;
}
.grid-item:nth-child(4) {
  animation-delay: 0.25s;
}
.grid-item:nth-child(5) {
  animation-delay: 0.3s;
}
.grid-item:nth-child(6) {
  animation-delay: 0.35s;
}
.grid-item:nth-child(7) {
  animation-delay: 0.4s;
}
.grid-item:nth-child(8) {
  animation-delay: 0.45s;
}
.grid-item:nth-child(9) {
  animation-delay: 0.5s;
}
.grid-item:nth-child(10) {
  animation-delay: 0.55s;
}
.grid-item:nth-child(11) {
  animation-delay: 0.6s;
}
.grid-item:nth-child(12) {
  animation-delay: 0.65s;
}
.grid-item:nth-child(n + 13) {
  animation-delay: 0.7s;
}

/* Animated background for cards */
.animated-bg {
  position: relative;
  overflow: hidden;
}

.animated-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    rgba(212, 175, 55, 0.05) 25%,
    transparent 25%,
    transparent 50%,
    rgba(212, 175, 55, 0.05) 50%,
      175, 55, 0.05) 25%,
    transparent 25%,
    transparent 50%,
    rgba(212, 175, 55, 0.05) 50%,\
    175, 55, 0.05) 50%,
    rgba(212, 175, 55, 0.05) 75%,
    transparent 75%,
    transparent\
  );
  background-size: 4px 4px;
  animation: bg-scroll 20s linear infinite;
  opacity: 0.3;
  z-index: 0;
}

@keyframes bg-scroll {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 100px 100px;
  }
}

/* Smooth page transitions */
.page-transition {
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.page-enter {
  opacity: 0;
  transform: translateY(20px);
}

.page-enter-active {
  opacity: 1;
  transform: translateY(0);
}

.page-exit {
  opacity: 1;
  transform: translateY(0);
}

.page-exit-active {
  opacity: 0;
  transform: translateY(-20px);
}

/* Pulse animation for interactive elements */
@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

.pulse-animation {
  animation: pulse 2s infinite;
}

/* Typewriter effect for text */
.typewriter {
  overflow: hidden;
  border-right: 2px solid var(--gold);
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: var(--gold);
  }
}

/* Smooth scrolling for the entire page */
html {
  scroll-behavior: smooth;
}

/* Fade in animation for page elements */
.fade-in {
  animation: fadeIn 1s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Add these styles at the end of the file for Petrov Assistant */
@keyframes pulse-notification {
  0%,
  100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
  }
}

.pulse-notification {
  animation: pulse-notification 2s infinite;
}

.petrov-typing .terminal-cursor {
  display: inline-block;
  width: 8px;
  height: 16px;
  background-color: var(--gold);
  animation: terminal-blink 1s step-end infinite;
  vertical-align: middle;
  margin-left: 2px;
}

.petrov-panel {
  box-shadow: 0 0 20px rgba(212, 175, 55, 0.2);
}

.petrov-question:hover {
  background-color: rgba(212, 175, 55, 0.1);
  border-color: var(--gold-dark);
}

.petrov-avatar {
  filter: sepia(0.5) hue-rotate(10deg);
  transition: all 0.3s ease;
}

.petrov-avatar:hover {
  filter: sepia(0.3) hue-rotate(0deg);
}

/* Add these styles at the end of the file for Petrov random events */
@keyframes static-flicker {
  0%,
  100% {
    opacity: 1;
  }
  25% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
  }
  75% {
    opacity: 0.8;
  }
}

.petrov-radio-static {
  animation: static-flicker 0.3s infinite;
  text-shadow: 0 0 5px rgba(139, 49, 3, 0.8);
}

.petrov-panel {
  box-shadow: 0 0 20px rgba(212, 175, 55, 0.2);
  position: relative;
  overflow: hidden;
}

.petrov-panel::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, var(--gold), transparent);
}

.petrov-panel::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 5px,
    rgba(0, 0, 0, 0.1) 5px,
    rgba(0, 0, 0, 0.1) 10px
  );
  opacity: 0.1;
  z-index: 0;
  pointer-events: none;
}
